/**
 * jquery 选择器
 * 思路：先将html扁平化，如果如果存在指定的class
 * 则做为扁平化子节点，然后再扁平化的html写到一个新窗口
 * 
 * 指定的class说明：
 *  	print-label：需要要遍平化的节点，如果这个节点是孙子节点，则把该节点放到子节点，同时删除子节点
 * 		print-table：用来处理当换页时，表头需要重新出现新一页的页头。
 *		print-tab：	 用来处理tab页面
 * 		print-hr：	 用来添加两个元素之间的间距
 *		print-tab-table：用来处理tab里面有表格，当表格换页时，表头需要重新出现新一页的页头。
 *      print-tab-label：用来处理tab里面的节点
 *		print-tab-hr：用来添加tab里面两个元素之间的间距
 *
 * A) 页面扁平化问题
 * 例1：
 * <div>
 *	<div></div>
 *	<div></div>
 *</div>
 * 转换后也是这个样子。
 * 
 * 例2：
 * <div>
 *  <div class="div1">
 *		<div class="print-label"></div>
 *	<div>
 *	<div class="div2"><div>
 * </div>
 * 扁平化后：
 * <div>
 *	<div class="print-label"></div>
 *	<div class="div2"><div>
 * </div>
 * 这里的div1将会丢失。
 *  
 * 例3：
 * table的约定
 * 如果需要换页的table且在换页后需要重新加上表头的，一定要加print-table, 如：<table class="print-table"></table>
 * table分页需要重新出现表头，只适用于如下结构:(表头要分开来写)
 *	<table>
 *		<thead>
 *			<tr>
 *				<th></th>
 *				<th></th>
 *				   ...
 *			</tr>
 *		</thead>
 *		<tbody>
 *			<tr>
 *				<td></td>
 *				<td></td>
 *				   ....
 *			</tr>
 *		</tbody>
 *	</table>
 * 
 * 例4：
 * 如果出现print-label嵌套，则有如下结果 
 * <div>
 *  <div class="div1 print-label">
 *		<div class="sub-div"></div>
 *		<div class="print-label"></div>
 *	<div>
 *	<div class="div2"><div>
 * </div>
 * 扁平化后：
 * <div>
 *  <div class="div1 print-label">
 *		<div class="sub-div"></div>
 *	<div>
 *	<div class="print-label"></div>
 *	<div class="div2"><div>
 * </div>
 * 
 * 例5：
 * tab的约定：
 * 本例只解析如下tab
 * <div class="print-tab">
 *   <ul>
 *     <li>title1</li>
 *     <li>title2</li>
 *   </ul>
 *	 <div>
 *   	<div>
 *			tab content1
 *			<div>tttt1</div>
 *			<div>bbbbbb</div>
 *		</div>
 *   	<div>
 *			tab content2
 *			<div>ccccc</div>
 *			<div>ddddd</div>
 *		</div>
 *   </div>
 * </div>
 * 扁平化后: 
 *  <ul>
 *		<li>title1></li>
 *	</ul>
 *	tab content1
 *	<div>tttt1</div>
 *	<div>bbbbbb</div>
 *	<ul>
 *		<li>title2></li>
 *	</ul>
 *	tab content2
 *	<div>ccccc</div>
 *	<div>ddddd</div>
 * 
 * 例6：
 * tab的约定2：
 * 本例只解析如下tab
 * <div class="print-tab">
 *   <ul>
 *     <li>title1</li>
 *     <li>title2</li>
 *   </ul>
 *	 <div>
 *   	<div>
 *			<div class="print-tab-label"></div>
 *			<table class="print-tab-table"></table>
 *		</div>
 *   	<div>
 *			<div class="print-tab-label"></div>
 *			<div class="print-tab-label"></div>
 *		</div>
 *   </div>
 * </div>
 * 扁平化后: 
 *  <ul>
 *		<li>title1></li>
 *	</ul>
 *	<div class="print-tab-label"></div>
 *	<table class="print-tab-table"></table>
 *	<ul>
 *		<li>title2></li>
 *	</ul>
 *	<div class="print-tab-label"></div>
 *	<div class="print-tab-label"></div>
 *
 *  修改每一项内容的间的间距问题：print-hr 
 *	<div class="print-hr" style=display:none;width:100%; height:30px;"></div>  
 *
 * B) 关于页边距问题：网页打印默认为：12.7mm(即上，下，左，右)都为12.7mm，在72dpi下面：1mm==2.8px,
 * 也就是页面边距为: (12.7*2.8)px， 如果有改动(就是在浏览器菜单选项里进行了页边距设置)，请手动传入页面距，单位为px
 *
 * C) 关于打印出的高度, 宽度：经测试高度为： 1051px, 高度为： 842px, 如果需要请自己行传入。
 * 
 * D) 关于css引用和js引用问题，把link，script标签的引入到新页面中
 *		(这里有一个路径问题，由于打印的时候打开一个新的空白窗口，在空白窗口下相对路径的link,script引用是无效的， 
 *		所以目前只支持绝对路径)，再将style,script标签下面的文本全部写入
 * 传入参数如下：
 * 
	 options = {
		selector: "print-area",  //如果没有则默认去查找id为print-area的区域为打印区域，这里不需要#号
		pageHeight: 842,		//打印页面的每一页面高度
		pageWidth: 1051,			//打印页面的宽度
		autoPrint: false,		//是不是自动打印，true为自动打印，false为显示预览
		marginTop : parseInt(12.7*2.8),   //页面边距以下参数为可选
		marginBottom: parseInt(12.7*2.8),
		marginLeft : parseInt(12.7*2.8),
		marginRight: parseInt(12.7*2.8)
	 }
 */